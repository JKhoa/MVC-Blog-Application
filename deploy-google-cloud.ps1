# Deploy ASP.NET MVC Blog to Google Cloud App Engine
# Y√™u c·∫ßu: Google Cloud SDK ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† c·∫•u h√¨nh

Write-Host "üöÄ Deploying MVC Blog to Google Cloud App Engine..." -ForegroundColor Green

# Ki·ªÉm tra Google Cloud SDK
try {
    gcloud --version
    Write-Host "‚úÖ Google Cloud SDK ƒë√£ s·∫µn s√†ng" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Vui l√≤ng c√†i ƒë·∫∑t Google Cloud SDK tr∆∞·ªõc" -ForegroundColor Red
    Write-Host "Download t·∫°i: https://cloud.google.com/sdk/docs/install" -ForegroundColor Yellow
    exit 1
}

# T·∫°o app.yaml cho Google App Engine
$appYaml = @"
runtime: aspnetcore
env: standard

# C·∫•u h√¨nh cho ASP.NET Core
manual_scaling:
  instances: 1

env_variables:
  ASPNETCORE_ENVIRONMENT: Production
  
# C·∫•u h√¨nh k·∫øt n·ªëi database (s·ª≠ d·ª•ng Google Cloud SQL)
beta_settings:
  cloud_sql_instances: your-project:region:instance-name
"@

$appYaml | Out-File -FilePath "app.yaml" -Encoding UTF8
Write-Host "‚úÖ ƒê√£ t·∫°o app.yaml" -ForegroundColor Green

# T·∫°o Dockerfile cho containerization
$dockerfile = @"
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["MvcBlog.csproj", "."]
RUN dotnet restore "MvcBlog.csproj"
COPY . .
WORKDIR "/src"
RUN dotnet build "MvcBlog.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "MvcBlog.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "MvcBlog.dll"]
"@

$dockerfile | Out-File -FilePath "Dockerfile" -Encoding UTF8
Write-Host "‚úÖ ƒê√£ t·∫°o Dockerfile" -ForegroundColor Green

# Ki·ªÉm tra project ID
$projectId = Read-Host "Nh·∫≠p Google Cloud Project ID c·ªßa b·∫°n"
if ([string]::IsNullOrEmpty($projectId)) {
    Write-Host "‚ùå Project ID kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" -ForegroundColor Red
    exit 1
}

# Set project
gcloud config set project $projectId
Write-Host "‚úÖ ƒê√£ set project: $projectId" -ForegroundColor Green

# Enable App Engine
Write-Host "üìù Enabling App Engine..." -ForegroundColor Yellow
gcloud app create --region=us-central1

# Deploy to App Engine
Write-Host "üöÄ Deploying to App Engine..." -ForegroundColor Yellow
gcloud app deploy --quiet

# L·∫•y URL c·ªßa ·ª©ng d·ª•ng
$appUrl = gcloud app describe --format="value(defaultHostname)"
$fullUrl = "https://$appUrl"

Write-Host "üéâ Deployment ho√†n t·∫•t!" -ForegroundColor Green
Write-Host "üîó URL ·ª©ng d·ª•ng: $fullUrl" -ForegroundColor Cyan
Write-Host "üì± B·∫°n c√≥ th·ªÉ truy c·∫≠p ·ª©ng d·ª•ng t·∫°i: $fullUrl" -ForegroundColor Cyan

# M·ªü browser
$openBrowser = Read-Host "B·∫°n c√≥ mu·ªën m·ªü browser ngay kh√¥ng? (y/n)"
if ($openBrowser -eq "y" -or $openBrowser -eq "Y") {
    Start-Process $fullUrl
}

Write-Host "‚úÖ Script ho√†n t·∫•t!" -ForegroundColor Green
